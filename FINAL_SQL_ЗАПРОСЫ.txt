CREATE TABLE IF NOT EXISTS users (
    user_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    last_name VARCHAR(100),
    phone VARCHAR(15) UNIQUE,
    email VARCHAR(100) UNIQUE,
    password VARCHAR(255),
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS employee (
    employee_id SERIAL PRIMARY KEY,
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(100),
    last_name VARCHAR(100),
    phone VARCHAR(15) UNIQUE,
    email VARCHAR(100) UNIQUE
);

CREATE TABLE IF NOT EXISTS payment_method (
    payment_id SERIAL PRIMARY KEY,
    card BOOLEAN,
    cash BOOLEAN,
    bank_name VARCHAR(255),
    card_number VARCHAR(20),
    cvv VARCHAR(4),
    name VARCHAR(255),
    expiration_date DATE
);

CREATE TABLE IF NOT EXISTS orders (
    order_id SERIAL PRIMARY KEY,
    user_id INT,
    employee_id INT,
    payment_method INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (employee_id) REFERENCES employee(employee_id),
    FOREIGN KEY (payment_method) REFERENCES payment_method(payment_id)
);

CREATE TABLE IF NOT EXISTS address (
    address_id SERIAL PRIMARY KEY,
    order_id INT,
    city VARCHAR(100),
    region VARCHAR(100),
    street VARCHAR(100),
    building_number VARCHAR(10),
    apartment_number VARCHAR(10),
    floor_number INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE IF NOT EXISTS user_have_addresses (
    user_have_address SERIAL PRIMARY KEY,
    user_id INT,
    address_id INT,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (address_id) REFERENCES address(address_id)
);

CREATE TABLE IF NOT EXISTS review (
    review_id SERIAL PRIMARY KEY,
    user_id INT,
    employee_id INT,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    text TEXT,
    grade INT,
    time TIME,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (employee_id) REFERENCES employee(employee_id)
);

CREATE TABLE IF NOT EXISTS status (
    status_id SERIAL PRIMARY KEY,
    order_id INT,
    description TEXT,
    status_name VARCHAR(100),
    is_terminal BOOLEAN,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

CREATE TABLE IF NOT EXISTS service (
    service_id SERIAL PRIMARY KEY,
    title VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2),
    duration INT,
    additional_services TEXT
);

CREATE TABLE IF NOT EXISTS order_contains_services (
    order_service_id SERIAL PRIMARY KEY,
    order_id INT,
    service_id INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (service_id) REFERENCES service(service_id)
);

CREATE TABLE IF NOT EXISTS products (
    product_id SERIAL PRIMARY KEY,
    title VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2)
);

CREATE TABLE IF NOT EXISTS promotion (
    promotion_id SERIAL PRIMARY KEY,
    product_id INT,
    title VARCHAR(100),
    description TEXT,
    start_date DATE,
    end_date DATE,
    discount DECIMAL(5, 2),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE IF NOT EXISTS order_contains_products (
    order_product_id SERIAL PRIMARY KEY,
    order_id INT,
    product_id INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);